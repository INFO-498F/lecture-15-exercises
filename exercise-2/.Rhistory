shiny::runApp()
library(shiny)
shiny::runApp()
source('build_map.R')
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
data$state
search <- 'North'
data %>% filter(grepl(search, state))
data %>% filter(grepl(search, data$state))
filter(data, grepl(search, state))
data
data$state
search
filter(data, grepl(search, state))
grepl(search, data$state)
library(dplyr)
library(dplyr)
filter(data, grepl(search, state))
data %>%
filter(grepl(search, state)) %>%
plot_ly(x = beef, y = dairy)
data %>%
filter(grepl(search, state)) %>%
plot_ly(x = beef, y = dairy, mode='markers')
shiny::runApp()
shiny::runApp()
shiny::runApp()
xvar <- 'beer'
xvar <- 'beef'
xmax <- data[,eval(parse(text = "xvar"))]
xMax
xmax
parse(text = "yvar")
shiny::runApp()
shiny::runApp()
shiny::runApp()
xvar = 'beef'
yvar = 'dairy'
xmax <- max(data[,eval(parse(text = "xvar"))])
xmin <- min(data[,eval(parse(text = "xvar"))])
ymax <- max(data[,eval(parse(text = "yvar"))])
ymin <- min(data[,eval(parse(text = "yvar"))])
xmax
xmin
ymax
ymin
search
data %>%
filter(grepl(search, state)) %>%
plot_ly(x = eval(parse(text = "xvar")), y = eval(parse(text = "yvar")), mode='markers')
eval(parse(text = "xvar"))
# Get limits of data
xmax <- max(data[,eval(parse(text = xvar))])
xmin <- min(data[,eval(parse(text = xvar))])
ymax <- max(data[,eval(parse(text = yvar))])
ymin <- min(data[,eval(parse(text = yvar))])
data %>%
filter(grepl(search, state)) %>%
plot_ly(x = eval(parse(text = xvar)), y = eval(parse(text = yvar)), mode='markers') %>%
layout(xaxis = list(range = c(xmin, xmax)),
yaxis = list(range = c(ymin, ymax))
)
shiny::runApp()
# Get limits of data
xmax <- max(data[,eval(parse(text = xvar))])
xmin <- min(data[,eval(parse(text = xvar))])
ymax <- max(data[,eval(parse(text = yvar))])
ymin <- min(data[,eval(parse(text = yvar))])
data %>%
filter(grepl(search, state)) %>%
plot_ly(x = eval(parse(text = xvar)), y = eval(parse(text = yvar)), mode='markers') %>%
layout(xaxis = list(range = c(xmin, xmax), title = xvar),
yaxis = list(range = c(ymin, ymax), title = yvar)
)
shiny::runApp()
xvar
yvar
search = ''
# Get limits of data
xmax <- max(data[,eval(parse(text = xvar))])
xmin <- min(data[,eval(parse(text = xvar))])
ymax <- max(data[,eval(parse(text = yvar))])
ymin <- min(data[,eval(parse(text = yvar))])
data %>%
filter(grepl(search, state)) %>%
plot_ly(x = eval(parse(text = xvar)), y = eval(parse(text = yvar)), mode='markers') %>%
layout(xaxis = list(range = c(xmin, xmax), title = xvar),
yaxis = list(range = c(ymin, ymax), title = yvar)
)
# Get limits of data
xmax <- max(data[,eval(parse(text = xvar))])
xmin <- min(data[,eval(parse(text = xvar))])
ymax <- max(data[,eval(parse(text = yvar))])
ymin <- min(data[,eval(parse(text = yvar))])
data %>%
filter(grepl(search, state)) %>%
plot_ly(x = eval(parse(text = xvar)), y = eval(parse(text = yvar)), mode='markers') %>%
layout(xaxis = list(range = c(0, xmax), title = xvar),
yaxis = list(range = c(0, ymax), title = yvar)
)
shiny::runApp()
shiny::runApp()
shiny::runApp()
xvar <- 'beef'
eval(parse(text = xvar))
data$beef
library(plotly)
library(shiny)
library(dplyr)
source('build_map.R')
source('build_scatter.R')
data <- read.csv("https://raw.githubusercontent.com/plotly/datasets/master/2011_us_ag_exports.csv")
build_scatter(data, 'North')
xvar <- 'beef'
data[,eval(parse(text = xvar))]
data[,eval(parse(text = 'xvar'))]
eval(parse(text = 'xvar'))
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp()
shiny::runApp('~/Documents/INFO-498F/lecture-15-exercises/example-1')
shiny::runApp('~/Documents/INFO-498F/lecture-15-exercises/example-1')
shiny::runApp('~/Documents/INFO-498F/lecture-14-exercises/shiny-example')
